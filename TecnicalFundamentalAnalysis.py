# -*- coding: utf-8 -*-
"""Preprocesing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OwDuaG7IHPnjFEnVY86ufFiXwQTw_yrn
"""

import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt

# Define the ticker symbol and time period
ticker_symbol = 'EURPLN=X'
start_date = '2023-9-01' 
end_date = '2024-1-3' 

# Download data
df = yf.download(ticker_symbol, start=start_date, end=end_date)

# Moving Averages
df['MA20'] = df['Close'].rolling(window=20).mean()
df['MA50'] = df['Close'].rolling(window=50).mean()

# RSI
delta = df['Close'].diff(1)
gain = delta.where(delta > 0, 0).rolling(window=14).mean()
loss = -delta.where(delta < 0, 0).rolling(window=14).mean()
rs = gain / loss
df['RSI'] = 100 - (100 / (1 + rs))

# MACD
df['EMA12'] = df['Close'].ewm(span=12, adjust=False).mean()
df['EMA26'] = df['Close'].ewm(span=26, adjust=False).mean()
df['MACD'] = df['EMA12'] - df['EMA26']
df['Signal'] = df['MACD'].ewm(span=9, adjust=False).mean()

# Calculate True Range (TR)
df['High-Low'] = df['High'] - df['Low']
df['High-PrevClose'] = abs(df['High'] - df['Close'].shift())
df['Low-PrevClose'] = abs(df['Low'] - df['Close'].shift())
df['TR'] = df[['High-Low', 'High-PrevClose', 'Low-PrevClose']].max(axis=1)

# Calculate the Average True Range (ATR) - typically using a 14-day period
df['ATR'] = df['TR'].rolling(window=14).mean()

# Closing Price with Moving Averages
plt.figure(figsize=(12, 6))
plt.plot(df['Close'], label='EUR/PLN Close')
plt.plot(df['MA20'], label='20-Day MA')
plt.plot(df['MA50'], label='50-Day MA')
plt.title('EUR/PLN Exchange Rate with Moving Averages')
plt.legend()
plt.show()

# RSI
plt.figure(figsize=(12, 4))
plt.plot(df['RSI'])
plt.axhline(70, color='red', linestyle='--')
plt.axhline(30, color='green', linestyle='--')
plt.axhline(50, color='grey', linestyle='--')
plt.title('EUR/PLN Relative Strength Index (RSI)')
plt.show()

# MACD
plt.figure(figsize=(12, 4))
plt.plot(df['MACD'], label='MACD', color='blue')
plt.plot(df['Signal'], label='Signal Line', color='orange')
plt.title('EUR/PLN MACD')
plt.legend()
plt.show()

#ATR
plt.figure(figsize=(12, 4))
plt.plot(df['ATR'], label='ATR')
plt.title('Average True Range (ATR) for EUR/PLN')
plt.legend()
plt.show()
